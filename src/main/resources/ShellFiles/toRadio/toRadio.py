from Crypto.PublicKey import RSA
from Crypto.Cipher import PKCS1_OAEP
import base64

# –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –ø—Ä–∏–≤–∞—Ç–Ω–∏–π –∫–ª—é—á —ñ–∑ —Ñ–∞–π–ª—É
def load_private_key(filename):
    with open(filename, "rb") as key_file:
        key_bytes = base64.b64decode(key_file.read())
        return RSA.import_key(key_bytes)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ä–æ–∑—à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
def decrypt_rsa(encrypted_message_base64, private_key):
    cipher_rsa = PKCS1_OAEP.new(private_key)
    encrypted_bytes = base64.b64decode(encrypted_message_base64)
    decrypted_bytes = cipher_rsa.decrypt(encrypted_bytes)
    return decrypted_bytes.decode('utf-8')

# 1Ô∏è‚É£ –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –ø—Ä–∏–≤–∞—Ç–Ω–∏–π –∫–ª—é—á
private_key = load_private_key("private_key.pem")

# 2Ô∏è‚É£ –í—Å—Ç–∞–≤ —Å—é–¥–∏ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ Java
encrypted_message = "–í–°–¢–ê–í –°–Æ–î–ò –ó–ê–®–ò–§–†–û–í–ê–ù–ò–ô –¢–ï–ö–°–¢"

# 3Ô∏è‚É£ –†–æ–∑—à–∏—Ñ—Ä—É—î–º–æ
decrypted_message = decrypt_rsa(encrypted_message, private_key)

print("üîì –†–æ–∑—à–∏—Ñ—Ä–æ–≤–∞–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:", decrypted_message)


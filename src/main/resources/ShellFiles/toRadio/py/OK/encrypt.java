import java.nio.file.Files;
import java.nio.file.Paths;
import java.security.KeyFactory;
import java.security.PublicKey;
import java.security.spec.X509EncodedKeySpec;
import java.util.Base64;
import javax.crypto.Cipher;

public class EncryptString {
    public static void main(String[] args) throws Exception {
        // –ß–∏—Ç–∞—î–º–æ –ø—É–±–ª—ñ—á–Ω–∏–π –∫–ª—é—á —ñ–∑ —Ñ–∞–π–ª—É
        PublicKey publicKey = loadPublicKey("public_key.pem");

        // –°—Ç—Ä–æ–∫–∞ –¥–ª—è —à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è
        //String originalString = "Hello, RSA Encryption with PEM!";
        String originalString = "–¶–µ –∞–Ω–∫–µ—Ç–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω—ñ —Å–µ—Å—ñ—ó, —â–æ –≤—ñ–¥–±—É–¥—É—Ç—å—Å—è –≤ —Ä–∞–º–∫–∞—Ö –æ–≥–æ–ª–æ—à–µ–Ω–æ–≥–æ –∫–æ–Ω–∫—É—Ä—Å—É –ü—Ä–æ–≥—Ä–∞–º–∏ Polaris.";

        // –®–∏—Ñ—Ä—É—î–º–æ
        byte[] encryptedData = encrypt(originalString, publicKey);

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —à–∏—Ñ—Ä–æ–≤–∞–Ω—É —Å—Ç—Ä–æ–∫—É —É —Ñ–∞–π–ª
        Files.write(Paths.get("encrypted_data.bin"), encryptedData);

        System.out.println("üîí –î–∞–Ω—ñ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω—ñ —Ç–∞ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ —É encrypted_data.bin!");
    }

    private static PublicKey loadPublicKey(String filename) throws Exception {
        // –ß–∏—Ç–∞—î–º–æ –≤–º—ñ—Å—Ç —Ñ–∞–π–ª—É
        String pem = new String(Files.readAllBytes(Paths.get(filename)))
                .replace("-----BEGIN PUBLIC KEY-----", "")
                .replace("-----END PUBLIC KEY-----", "")
                .replaceAll("\\s", "");

        // –î–µ–∫–æ–¥—É—î–º–æ Base64
        byte[] keyBytes = Base64.getDecoder().decode(pem);

        // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –ø—É–±–ª—ñ—á–Ω–∏–π –∫–ª—é—á
        X509EncodedKeySpec keySpec = new X509EncodedKeySpec(keyBytes);
        KeyFactory keyFactory = KeyFactory.getInstance("RSA");
        return keyFactory.generatePublic(keySpec);
    }

    private static byte[] encrypt(String data, PublicKey publicKey) throws Exception {
        //Cipher cipher = Cipher.getInstance("RSA/ECB/OAEPWithSHA-256AndMGF1Padding");
	Cipher cipher = Cipher.getInstance("RSA/ECB/OAEPWithSHA-1AndMGF1Padding");
        cipher.init(Cipher.ENCRYPT_MODE, publicKey);
        return cipher.doFinal(data.getBytes());
    }
}

